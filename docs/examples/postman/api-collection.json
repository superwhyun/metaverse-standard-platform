{
  "info": {
    "name": "메타버스 국제표준화 플랫폼 API",
    "description": "메타버스 국제표준화 플랫폼의 모든 API 엔드포인트를 테스트할 수 있는 Postman 컬렉션입니다.",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "https://your-domain.com",
      "description": "API 기본 URL"
    },
    {
      "key": "auth_token",
      "value": "",
      "description": "JWT 인증 토큰 (로그인 후 자동 설정됨)"
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{auth_token}}",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// 로그인이 필요한 요청인지 확인",
          "const requiresAuth = pm.request.url.path.some(segment => ",
          "  segment === 'reports' || segment === 'conferences' || segment === 'organizations'",
          ") && pm.request.method !== 'GET';",
          "",
          "if (requiresAuth && !pm.globals.get('auth_token')) {",
          "  console.log('⚠️ 이 요청은 관리자 인증이 필요합니다. 먼저 로그인을 실행하세요.');",
          "}"
        ]
      }
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "description": "인증 관련 API",
      "item": [
        {
          "name": "로그인",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "// 로그인 성공 시 토큰 저장",
                  "if (pm.response.code === 200) {",
                  "  const setCookie = pm.response.headers.get('Set-Cookie');",
                  "  if (setCookie) {",
                  "    const tokenMatch = setCookie.match(/auth-token=([^;]+)/);",
                  "    if (tokenMatch) {",
                  "      pm.globals.set('auth_token', tokenMatch[1]);",
                  "      console.log('✅ JWT 토큰이 저장되었습니다.');",
                  "    }",
                  "  }",
                  "}",
                  "",
                  "pm.test('로그인 성공', function () {",
                  "  pm.response.to.have.status(200);",
                  "  pm.response.to.have.jsonBody('success', true);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"admin\",\n  \"password\": \"your-password\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login"]
            }
          }
        },
        {
          "name": "세션 확인",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/auth/session",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "session"]
            }
          }
        },
        {
          "name": "로그아웃",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/auth/logout",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "logout"]
            }
          }
        }
      ]
    },
    {
      "name": "Reports",
      "description": "보고서 관리 API",
      "item": [
        {
          "name": "보고서 목록 조회",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/reports?limit=10&offset=0",
              "host": ["{{base_url}}"],
              "path": ["api", "reports"],
              "query": [
                {
                  "key": "limit",
                  "value": "10",
                  "description": "한 페이지당 항목 수"
                },
                {
                  "key": "offset",
                  "value": "0",
                  "description": "시작 위치"
                },
                {
                  "key": "year",
                  "value": "2024",
                  "disabled": true,
                  "description": "년도 필터"
                },
                {
                  "key": "month",
                  "value": "8",
                  "disabled": true,
                  "description": "월 필터"
                },
                {
                  "key": "includeContent",
                  "value": "true",
                  "disabled": true,
                  "description": "본문 내용 포함"
                }
              ]
            }
          }
        },
        {
          "name": "개별 보고서 조회",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/reports/456",
              "host": ["{{base_url}}"],
              "path": ["api", "reports", "456"]
            }
          }
        },
        {
          "name": "보고서 등록",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('보고서 등록 성공', function () {",
                  "  pm.response.to.have.status(200);",
                  "  pm.response.to.have.jsonBody('success', true);",
                  "  pm.response.to.have.jsonBody('data.id');",
                  "});",
                  "",
                  "// 생성된 보고서 ID 저장",
                  "if (pm.response.code === 200) {",
                  "  const responseJson = pm.response.json();",
                  "  pm.globals.set('created_report_id', responseJson.data.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"테스트 보고서 - ITU-T 메타버스 표준화 현황\",\n  \"date\": \"2024-08-24\",\n  \"summary\": \"ITU-T Study Group 16에서 진행 중인 메타버스 관련 표준화 작업의 현황을 정리한 테스트 보고서입니다.\",\n  \"content\": \"## 개요\\n\\nITU-T Study Group 16은 멀티미디어 서비스, 시스템 및 애플리케이션에 대한 표준화를 담당하는 연구반입니다.\\n\\n## 메타버스 관련 표준화 현황\\n\\n### 1. F.748.1 - Requirements for immersive services\\n- 상태: 승인됨 (2023년)\\n- 내용: 몰입형 서비스에 대한 요구사항\\n\\n### 2. F.748.2 - Framework for immersive services\\n- 상태: 개발 중 (2024년 완료 예정)\\n- 내용: 몰입형 서비스 프레임워크\\n\\n## 결론\\n\\nITU-T SG16에서는 메타버스 관련 표준화가 활발히 진행되고 있으며, 향후 더욱 구체적인 표준들이 개발될 것으로 예상됩니다.\",\n  \"category\": \"표준\",\n  \"organization\": \"ITU\",\n  \"tags\": [\"메타버스\", \"ITU-T\", \"SG16\", \"표준화\", \"테스트\"],\n  \"downloadUrl\": \"https://example.com/reports/test-itu-sg16-metaverse-2024.pdf\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/reports",
              "host": ["{{base_url}}"],
              "path": ["api", "reports"]
            }
          }
        },
        {
          "name": "보고서 수정",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"수정된 보고서 제목\",\n  \"date\": \"2024-08-24\",\n  \"summary\": \"수정된 요약 내용\",\n  \"content\": \"수정된 본문 내용\",\n  \"category\": \"표준\",\n  \"organization\": \"ITU\",\n  \"tags\": [\"메타버스\", \"수정됨\"]\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/reports/{{created_report_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "reports", "{{created_report_id}}"]
            }
          }
        },
        {
          "name": "보고서 삭제",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/reports/{{created_report_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "reports", "{{created_report_id}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Conferences",
      "description": "회의 관리 API",
      "item": [
        {
          "name": "회의 목록 조회",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/conferences",
              "host": ["{{base_url}}"],
              "path": ["api", "conferences"],
              "query": [
                {
                  "key": "year",
                  "value": "2024",
                  "disabled": true,
                  "description": "년도 필터"
                },
                {
                  "key": "month", 
                  "value": "9",
                  "disabled": true,
                  "description": "월 필터"
                },
                {
                  "key": "startDate",
                  "value": "2024-09-01",
                  "disabled": true,
                  "description": "검색 시작일"
                },
                {
                  "key": "endDate",
                  "value": "2024-09-30", 
                  "disabled": true,
                  "description": "검색 종료일"
                }
              ]
            }
          }
        },
        {
          "name": "개별 회의 조회",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/conferences/123",
              "host": ["{{base_url}}"],
              "path": ["api", "conferences", "123"]
            }
          }
        },
        {
          "name": "회의 등록",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('회의 등록 성공', function () {",
                  "  pm.response.to.have.status(201);",
                  "  pm.response.to.have.jsonBody('success', true);",
                  "  pm.response.to.have.jsonBody('data.id');",
                  "});",
                  "",
                  "// 생성된 회의 ID 저장",
                  "if (pm.response.code === 201) {",
                  "  const responseJson = pm.response.json();",
                  "  pm.globals.set('created_conference_id', responseJson.data.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"테스트 회의 - ITU-T SG16 Q4 메타버스 표준화 회의\",\n  \"organization\": \"ITU\",\n  \"location\": \"제네바, 스위스\",\n  \"description\": \"메타버스 표준화 관련 분기별 정기 회의 (테스트용)\",\n  \"startDate\": \"2024-09-15\",\n  \"endDate\": \"2024-09-17\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/conferences",
              "host": ["{{base_url}}"],
              "path": ["api", "conferences"]
            }
          }
        },
        {
          "name": "단일일 회의 등록",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"테스트 세미나 - VR 기술 동향 포럼\",\n  \"organization\": \"ETRI\",\n  \"location\": \"대전 ETRI 본원\",\n  \"description\": \"VR 기술 동향 및 표준화 논의 (테스트용)\",\n  \"startDate\": \"2024-09-25\",\n  \"endDate\": \"2024-09-25\",\n  \"startTime\": \"14:00\",\n  \"endTime\": \"17:00\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/conferences",
              "host": ["{{base_url}}"],
              "path": ["api", "conferences"]
            }
          }
        },
        {
          "name": "회의 수정",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"수정된 회의 제목\",\n  \"organization\": \"ITU\",\n  \"location\": \"온라인\",\n  \"description\": \"수정된 회의 설명\",\n  \"startDate\": \"2024-09-20\",\n  \"endDate\": \"2024-09-22\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/conferences/{{created_conference_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "conferences", "{{created_conference_id}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Categories",
      "description": "카테고리 관리 API",
      "item": [
        {
          "name": "카테고리 목록 조회",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/categories",
              "host": ["{{base_url}}"],
              "path": ["api", "categories"]
            }
          }
        },
        {
          "name": "카테고리 등록",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"테스트카테고리\",\n  \"description\": \"테스트용 카테고리 설명\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/categories",
              "host": ["{{base_url}}"],
              "path": ["api", "categories"]
            }
          }
        }
      ]
    },
    {
      "name": "Organizations",
      "description": "기관 관리 API",
      "item": [
        {
          "name": "기관 목록 조회",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/organizations",
              "host": ["{{base_url}}"],
              "path": ["api", "organizations"]
            }
          }
        },
        {
          "name": "기관 등록",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"테스트기관\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/organizations",
              "host": ["{{base_url}}"],
              "path": ["api", "organizations"]
            }
          }
        }
      ]
    },
    {
      "name": "Tech Analysis",
      "description": "기술 분석 API",
      "item": [
        {
          "name": "기술 소식 목록 조회",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/tech-analysis?limit=8&offset=0",
              "host": ["{{base_url}}"],
              "path": ["api", "tech-analysis"],
              "query": [
                {
                  "key": "limit",
                  "value": "8",
                  "description": "한 페이지당 항목 수"
                },
                {
                  "key": "offset",
                  "value": "0",
                  "description": "시작 위치"
                },
                {
                  "key": "search",
                  "value": "메타버스",
                  "disabled": true,
                  "description": "검색어"
                },
                {
                  "key": "category",
                  "value": "기술",
                  "disabled": true,
                  "description": "카테고리 필터"
                }
              ]
            }
          }
        },
        {
          "name": "기술 소식 등록 (URL 기반)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"url\": \"https://example.com/metaverse-news-article\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/tech-analysis",
              "host": ["{{base_url}}"],
              "path": ["api", "tech-analysis"]
            }
          }
        }
      ]
    }
  ]
}